@model Bloggengine.Models.Blogs
@using Bloggengine.Models
@using Microsoft.AspNet.Identity


@if (Request.IsAuthenticated)
{

    using (var db = new MyDbContext())
    {
        var user_id = db.Accounts.Where(x => x.UserName == User.Identity.Name).Select(i => i.Id).FirstOrDefault();

        var likeconnn = db.LikeConns.Where(x => x.Blog_Id == Model.Blog_Id && x.User_id == user_id).FirstOrDefault();

        if (likeconnn != null)
        {
            Likes Like = db.LikeConns.Where(x => x.Blog_Id == Model.Blog_Id && x.User_id == user_id).FirstOrDefault();
            if (Like.IsLiked != false)
            {
                <strong style="display:inline; font-size: 1020% ; margin:2px">@ViewData["LIKE"]</strong>
                <form style="display:inline" class="dislike" action="@Url.Action("Dislike", "Blogs", new { id = Model.Blog_Id, u_id = user_id })" method="POST">

                    <input src="~/Image/like.png" height="100" width="100" disabled style="filter:blur(2px); display:inline" type="image" value="Like" />
                </form>

                <form style="display:inline" class="dislike" action="@Url.Action("Dislike", "Blogs", new { id = Model.Blog_Id, u_id = user_id })" method="POST">

                    <input style="display:inline" type="image" src="~/Image/dislike.png" height="100" width="100" value="Dislike" />
                </form>

                <strong style="display:inline; font-size: 1020% ; margin:2px">@ViewData["DISLIKE"]</strong>

                <h4>@Html.ActionLink("Edit", "Edit", new { id = Model.Blog_Id })</h4>
            }
            else
            {
                <strong style="display:inline; font-size: 1020% ; margin:2px">@ViewData["LIKE"]</strong>
                <form style="display:inline" class="like" action="@Url.Action("Like", "Blogs", new { id = Model.Blog_Id, u_id = user_id })" method="POST">

                    <input style="display:inline" type="image" src="~/Image/like.png" height="100" width="100" value="Like" />
                </form>

                <form style="display:inline" class="dislike" action="@Url.Action("Dislike", "Blogs", new { id = Model.Blog_Id, u_id = user_id })" method="POST">

                    <input src="~/Image/dislike.png" height="100" width="100" disabled style="filter:blur(2px); display:inline" type="image" value="Dislike" />
                </form>

                <strong style="display:inline; font-size: 1020% ; margin:2px">@ViewData["DISLIKE"]</strong>

                <h4> @Html.ActionLink("Edit", "Edit", new { id = Model.Blog_Id })</h4>
            }
        }
        else
        {
            Likes Like = db.LikeConns.Where(x => x.Blog_Id == Model.Blog_Id && x.User_id == user_id).FirstOrDefault();

            <strong style="display:inline; font-size: 1020% ;margin:2px">@ViewData["LIKE"]</strong>

            <form style="display:inline" action="@Url.Action("Like", "Blogs", new { id = Model.Blog_Id, u_id = user_id })" method="POST">

                <input style="display:inline" type="image" src="~/Image/like.png" height="100" width="100" value="Like" />
            </form>

            <form style="display:inline" action="@Url.Action("Dislike", "Blogs", new { id = Model.Blog_Id, u_id = user_id })" method="POST">

                <input style="display:inline" type="image" src="~/Image/dislike.png" height="100" width="100" value="Dislike" />
            </form>

            <strong style="display:inline; font-size: 1020% ; margin:2px">@ViewData["DISLIKE"]</strong>

            <h4>@Html.ActionLink("Edit", "Edit", new { id = Model.Blog_Id })</h4>
        }



    }
}
else
{
    using (var db = new MyDbContext())
    {
        var user_id = 0;
        try                                                                         //if no user is loggedin user_id will return error, 'no rows found' and we will redirect to Action blogpost
        {
            user_id = db.Accounts.Where(x => x.UserName == User.Identity.Name).Select(i => i.Id).First();

        }
        catch (Exception)
        {
            //do nothing redirect autmatically to blogpost.

        }
        finally
        {
            Likes Like = db.LikeConns.Where(x => x.Blog_Id == Model.Blog_Id && x.User_id == user_id).FirstOrDefault();

            <strong style="display:inline; font-size: 1020% ; margin:2px">@ViewData["LIKE"]</strong>

            <form style="display:inline" action="@Url.Action("Like", "Blogs", new { id = Model.Blog_Id, u_id = user_id })" method="POST">

                <input style="display:inline" type="image" src="~/Image/like.png" height="100" width="100" value="Like" />
            </form>

            <form style="display:inline" action="@Url.Action("Dislike", "Blogs", new { id = Model.Blog_Id, u_id = user_id })" method="POST">

                <input style="display:inline" type="image" src="~/Image/dislike.png" height="100" width="100" value="Dislike" />
            </form>

            <strong style="display:inline; font-size: 1020% ; margin:2px">@ViewData["DISLIKE"]</strong>


        }

    }

}


