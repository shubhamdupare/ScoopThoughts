@model Bloggengine.Models.Blogs

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Blogs", FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Blogs</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        @if (ViewBag.Message != null)
        {
            <div class="alert alert-success">@ViewBag.Message</div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                
                @Html.TextBox("Author", User.Identity.Name);
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Posted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Posted", DateTime.Now.ToString());
               
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Images, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <input type="file" name="file" required/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, new {@class = "ckeditor"})
                @Html.ValidationMessageFor(model => model.Content, "", new {@class = "ckeditor"})
            </div>
        </div>
        
       
    
        @*<div class="col-md-10">
            @Html.HiddenFor(model => model.Like, new { htmlAttributes = new { @class = "form-control" } })
           
        </div>
        

        <div class="col-md-10">
            @Html.HiddenFor(model => model.Dislike, new { htmlAttributes = new { @class = "form-control" } })
               
        </div>*@
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ckeditor")
}
